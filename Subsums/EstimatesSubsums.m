// Computations complementing the proofs
// of Propositions 5.2, 6.1, and 7.1.

SetLogFile("EstimateSubsums.out");
R<x,y,z> := PolynomialRing(Rationals(),3);

procedure EstimateSubsums(monomials, lengthSubsum)
	es := [Exponents(m) : m in monomials];		// list of the vectors of exponents
	Z3 := FreeAbelianGroup(3);			// the ambient module \mathbb{Z}^3

	// Part 1:
	// Test that every subset I_j
	// consisting of at least lengthSubsum
	// elements leads to M_j being of finite
	// index in Z^3, and bound the exponent
	// of Z^3/M_j
	SS := Subsets({1..#monomials}, lengthSubsum);

	"Number of subsets with", lengthSubsum, "elements:", #SS;

	InfiniteQuotient := 0;				// Counter for the number of subsets I
							// for which the corresponding
							// submodule M satisfies |Z^3/M| = \infty
							// At the end we will check that
							// InfiniteQuotient is still 0

	MaxExponent := 0;				// Maximal exponent arising for
							// the different groups Z^3 / M

	for s in SS do
		sList := SetToSequence(s);
		sEs := [ es[i] : i in sList ];		// Choice of a subset of exponents
							// corresponding to a subset of
							// { 1, ..., number of monomials }

		vs := [Z3!e-Z3!sEs[1] : e in sEs];	// We fix arbitrarily a vector of exponents
							// and take differences with respect to it
		M := sub<Z3 | vs>;			// The submodule of Z^3 generated by the differences
		if not IsFinite(Z3/M) then		// If Z^3/M is not finite,
			InfiniteQuotient := InfiniteQuotient+1; 		// increase the InfiniteQuotient counter
		else
			MaxExponent := Max(MaxExponent, Exponent(Z3/M));	// Otherwise, update MaxExponent
		end if;
	end for;
	assert InfiniteQuotient eq 0;					// Check that no quotient Z^3/M is infinite
	"Every subset I with |I| \\geq", lengthSubsum, "gives a finite quotient";
	"For each such I, the quotient Z^3/M has exponent at most", MaxExponent;		// Display the maximal exponent found

	
	// Part 2:
	// we list all the possibilities for the exponent
	// of Z^3/M, assuming it is finite
	vecs := { Z3!a - Z3!b : a in es, b in es };		// All possible differences of
								// two vectors of exponents
								// appearing in the given monomials

	possibleExponents := {};				// List of exponents
								// of the finite groups Z^3/M

	SS3 := Subsets(vecs,3);					// A finite-index submodule of Z^3
								// is generated by at least 3 elements

	for ss in SS3 do					// Loop over all 3-elements subsets
		ssList := SetToSequence(ss);			// of the set of differences
		M := sub<Z3 | ssList>;
		if IsFinite(Z3/M) then				// Compute the corresponding submodule of Z^3
			possibleExponents := possibleExponents join { Exponent(Z3/M) };		// Update the list of possible exponents
		end if;
	end for;

	"If Z^3/M is finite, its exponent lies in the set", possibleExponents;		// Display the results
end procedure;


"==============================";
"Subsums for the ab=cd equation";

monomialsabcd :=
[
    x*y*z,
    x*y,
    x*z,
    x,
    y*z,
    y,
    z,
    1
];
EstimateSubsums(monomialsabcd, 5);




"\n\n==============================";
"Subsums for the (3)+(2) equation";

monomials32 :=
[
    x^2*y*z,
    x^2*y,
    x^2*z,
    x^2,
    x*y^2*z,
    x*y^2,
    x*y*z,
    x*y,
    x*z,
    x,
    y^2*z,
    y^2,
    y*z,
    y
];

EstimateSubsums(monomials32, 9);

"\n\n==============================";
"Subsums for the (2)+(2)+(2) equation";

monomials222 :=
[
x^2 * y^2 * z^2, 1, 
x^2 * y^2 * z, z,
x^2 * y * z^2, y,
x * y^2 * z^2, x,
x^2 * y^2, z^2,
x^2 * y*z, y * z,
x^2 * z^2, y^2,
x * y^2 * z, x * z,
x * y * z^2, x * y,
y^2 * z^2, x^2,
x^2 * y, y * z^2,
x^2 * z, y^2 * z,
x * y^2, x * z^2,
x * y * z
];
EstimateSubsums(monomials222, 10);



exit;
